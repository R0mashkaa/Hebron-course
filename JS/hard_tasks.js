// 1.Відтворити роботу годинника, відрахувавши 2 хвилини (2 цикли! 1й - хвилини, 2й - секунди)
// 2.Відтворити роботу годинника, відрахувавши  2 години 20 хвилини (3 цикли! 1й - години, 2й - хвилини, 3й - секунди)

// __________________________________________________________


// 3.Дано відсортований масив (мінімум 10 елементів)
// Необхідно модифікувати масив так, що б дублікати зустрічалися не більше 2х разів підряд.

// Example:
// [1, 1, 1, 2, 3, 3, 3, 3] -> [ 1, 1, 2, 3, 3, 1, 3, 3]

// [0, 0, 1, 1, 1, 2, 2] -> [0, 0, 1, 1, 2, 2, 1]

// ____________________________________________________________

// 4.Створити функцію яка приймає число та повертає текст як в прикладі:
// 3275  —>  "3000 + 200 + 70 +5"

// ____________________________________________________________

// 5.Даний масив цілих чисел, знайдіть той, який зустрічається непарна кількість разів. Завжди буде тільки одне ціле число, яке зустрічається непарна кількість разів.
// [1,2,3,4,5,2,4,1,3] -> 5

// _____________________________________________________________

// 6.Знайти анаграму.
// Перевірити чи слово має в собі такі самі літери як і поеперднє слово.

// ANAGRAM | MGANRAA -> true
// EXIT | AXET -> false
// GOOD | DOGO -> true

// _______________________________________________________________

// 7.Точна ступінь двійки
// Дано натуральне число N.
// Вивести слово "Yes", якщо число "N" є точним ступенем двійки, або слово "NO" в іншому випадку
// Операцією зведення на ступінь користуватися не можна!

// ______________________________________________________________

// 8.Сума цифр числа
// Дано натуральне число N. Вичисліть суму його цифр.
// При вирішенні цього завдання НЕ можна використовувати рядки,
// списки, масиви та цикли, очевидно.
// Рекурсія)

// ______________________________________________________________

// 9.Паліндром
// Дане слово, яке складається лише з малих латинських букв. Перевірьте, чи це слово є паліндромом. Виведіть "YES" або "NO".
// При вирішенні цього завдання НЕ можна використовувавти цикли, у рішеннях на пітоні НЕ можна використовувати зрізи з кроком, відмінним від 1.

// _______________________________________________________________

// 10.Кількість одиниць
// Дана послідовність натуральних чисел у рядку, що завершується двома числами 0 поспіль.
// Визначте, скільки разів в цій послідовності зустрічається число 1. Числа, які йдуть після двух нулів, потрібно ігнорувати.

// 2176491947586100 -> 3

// _________________________________________________________________

// 11.Вирівняти багаторівневий масив в однорівневий
// [1,3, ['Hello, 'Wordd', [9,6,1]], ['oops'], 9] -> [1, 3, 'Hello, 'Wordd', 9, 6, 1, 'oops', 9]
// flat використовувати заборонено.

// ___________________________________________________________________

// 12.Знайти набільший елемент в масиві за допомогою reduce
// [1,6,9,0,17,88,4,7] -> 88

// ____________________________________________________________________


// 13.Отримати масив лише унікальних значень за допомогою reduce
// [1, 9, 0, 1, 5, 9, 1, 6] -> [1, 9, 0, 5, 6]

// ____________________________________________________________________
// 14.Знайти найблільше число поліндром яке утворюється завдяки добутку двох простих пятизначних чисел.

// ____________________________________________________________________

// 15.Реалізувати друкарську машинку. 
// У вас є текст "Hello World".
// Ваша функція має друкувати цей текст по 1 симоволу в браузері. 
// КОЖНА нова буква має бути з РАНДОМНОЮ заутримкою від 0.1 до 1 секунди.
// Цим самим ви маєте симулювати написання даного тексту юзером. 
// Приклад: "Hello"
// Затримки: 
// H (затримка 0.6)
// e (затримка 0.1)
// l (затримка 0.3)
// l (затримка 0.7)
// о (затримка 1)



// ==============================================================================
// ==============================================================================

// 1.Відтворити роботу годинника, відрахувавши 2 хвилини (2 цикли! 1й - хвилини, 2й - секунди) ↓
// function o_clock()
// {
//     for (let m = 0; m < 60; m++){
//         for (let s = 0; s < 60; s++){
//             console.log(`${m} хв : ${s} секунд`);

//     if (m === 2 && s === 0) 
//         return;

//         }
//     }
//   }
  
//   o_clock()



// 2.Відтворити роботу годинника, відрахувавши  2 години 20 хвилини (3 цикли! 1й - години, 2й - хвилини, 3й - секунди)
// function o_clock()
// {
//     for (let h = 0; h < 24; h++){
//         for (let m = 0; m < 60; m++){
//             for (let s = 0; s < 60; s++){
//                 console.log(`${h} год : ${m} хв : ${s} секунд`);

//         if (h === 2 && m === 20 && s === 0) 
//             return;

//             }
//         }
//   }
// }
//   o_clock()

// 3.Дано відсортований масив (мінімум 10 елементів)
// Необхідно модифікувати масив так, що б дублікати зустрічалися не більше 2х разів підряд.

// Example:
// [1, 1, 1, 2, 3, 3, 3, 3] -> [ 1, 1, 2, 3, 3, 1, 3, 3]

// [0, 0, 1, 1, 1, 2, 2] -> [0, 0, 1, 1, 2, 2, 1]


// // const mas = [0,0,1,1,1,2,2]
// const mas = [1,1,1,2,3,3,3,3];

// const tmp_mas = [];

// let j=0;
// for(let i=0; i<mas.length; i++)
// {
//    if(mas[i] == mas[i+1] && mas[i+1] == mas[i+2])
//    {
//     tmp_mas[j] = (mas.splice(i,1))
//     j++;
//    }
// }

// let string = mas.toString();

// string += (',' + tmp_mas.toString())
// console.log(string);




// // 4.Створити функцію яка приймає число та повертає текст як в прикладі:
// // 3275  —>  "3000 + 200 + 70 +5"
// // Вирішення задачи математичним способом  ↓

// function division_dig(our_digits)
// {
//   if(typeof our_digits == 'number')
//     {

//     
//     let tmp = string.length, n=10;
  
//     for(let i=2; i < tmp; i++)
//         n = n + '0';

//     for (let i = 0; i < tmp; i++) 
//     {
//         if(tmp > 1)
//         {
//             string[i] = string[i] * n;
//             n = n/10
//         }
//         else
//             continue;
//     }

//     return (console.log(`Your number is \"${our_digits}\" `), console.log(string.join(' + ')) );
//     }    
    
//   else
//     return console.error("Error. Wrong not a number entered");

// };

// division_dig(3275);
